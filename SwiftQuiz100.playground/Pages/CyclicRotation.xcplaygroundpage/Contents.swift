//: [Previous](@previous)
/*
CyclicRotation - Rotate an array to the right by a given number of steps.

 N 개의 정수로 구성된 배열 A가 주어집니다. 배열을 회전하면 각 요소가 하나의 인덱스만큼 오른쪽으로 이동하고 배열의 마지막 요소가 첫 번째 위치로 이동합니다. 예를 들어, 배열 A = [3, 8, 9, 7, 6]의 회전은 [6, 3, 8, 9, 7]입니다 (요소는 하나의 인덱스만큼 오른쪽으로 이동하고 6은 첫 번째 위치로 이동 됨).
 
 목표는 배열 A를 K 번 회전시키는 것입니다. 즉, A의 각 요소는 오른쪽 K 번으로 이동합니다.
 
 함수를 작성하십시오.
 
 클래스 솔루션 {public int [] solution (int [] A, int K); }
 
 N 개의 정수와 정수 K로 구성된 배열 A가 주어지면 배열 A가 K 번 회전 한 것을 반환합니다.
 
 예를 들어, 주어진
 
         A = [3, 8, 9, 7, 6]
         K = 3
 함수는 [9, 7, 6, 3, 8]을 반환해야합니다. 세 가지 회전이 이루어졌다.
 
         [3, 8, 9, 7, 6] → [6, 3, 8, 9, 7]
         [6, 3, 8, 9, 7] → [7, 6, 3, 8, 9]
         [7, 6, 3, 8, 9] → [9, 7, 6, 3, 8]
 또 다른 예를 들면 다음과 같습니다.
 
         A = [0, 0, 0]
         K = 1
 함수는 [0, 0, 0]을 반환해야합니다.
 
 주어진
 
         A = [1, 2, 3, 4]
         K = 4
 함수는 [1, 2, 3, 4]를 반환해야합니다.

 
 
*/


//: [Next](@next)
